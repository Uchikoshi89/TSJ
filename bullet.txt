#include "main.h"
#include "enemy.h"
#include "bullet.h"
#include "player.h"

int bulletImage[2];
CHARACTER bullet[BULLET_MAX];
int bulletMoveCnt[BULLET_MAX];

void BulletSystemInit()
{
	LoadDivGraph("image/bullet.png", 2, 2, 1, 8, 8, bulletImage);
}
void BulletInit()
{
	for (int i = 0; i < BULLET_MAX; i++) {

			bullet[i].flag = 0;
			bullet[i].size = { 8,8 };
			bullet[i].speed = 8.5f;		// 実数
			bullet[i].degree = 90;		// 90度
			bulletMoveCnt[i] = 0;
	}
}

void BulletUpData()
{
	enemyBulletCnt++;
	if (enemyBulletCnt > enemyBulletTiming) {
		for (int i = 0; i < BULLET_MAX; i++) {

			bulletMoveCnt[i]++;
			// 向きを変えるﾀｲﾐﾝｸﾞ
			if (bulletMoveCnt[i] > 5) {

				xy v[2];// 0:現在,1:目標
				v[0].x = cos(bullet[i].angle);	// 現在の方向
				v[0].y = sin(bullet[i].angle);	// 現在の方向
				v[1].x = player.pos.x - bullet[i].pos.x;	// 目標の方向
				v[1].y = player.pos.y - bullet[i].pos.y;	// 目標の方向

				// 外積により左右のどちらにいるかを計算(+値、-値)
				float tmpCross;
				tmpCross = (v[0].x*v[1].y) - (v[0].y*v[1].x);

				// tmpCrossが+値だったら右回り、-値だったら左回り
				if (tmpCross > 0)  bullet[i].angle + (PI / 180) * 5;	// 5度右に方向を変える
				if (tmpCross < 0)  bullet[i].angle - (PI / 180) * 5;	// 5度左に方向を変える

				if (bullet[i].flag == 0) {
					bullet[i].pos = enemy.pos;	// 発射位置
												
					bullet[i].angle = atan2(player.pos.y - enemy.pos.y,
											player.pos.x - enemy.pos.x);
					bullet[i].mov.x = cos(bullet[i].angle) * bullet[i].speed;
					bullet[i].mov.y = sin(bullet[i].angle) * bullet[i].speed;
					//bullet[i].flag = 1;
					enemyBulletCnt = 0;
					break;
				}
			}
		}
	}

	// 外に出たら消す処理
	for (int i = 0; i < BULLET_MAX; i++) {
		if (bullet[i].flag == 1) {
			bullet[i].pos.x += bullet[i].mov.x;
			bullet[i].pos.y += bullet[i].mov.y;
			if ((bullet[i].pos.x < 0)
				|| (bullet[i].pos.x > SCREEN_SIZE_X)
				|| (bullet[i].pos.y < 0)
				|| (bullet[i].pos.y > SCREEN_SIZE_Y)
				) {
				bullet[i].flag = 0;
			}
		}
	}
}

void BulletDraw()
{
	for (int i = 0; i < BULLET_MAX; i++) {
			if (bullet[i].flag == 1) {
				DrawGraph(bullet[i].pos.x - bullet[i].size.x / 2,
					bullet[i].pos.y - bullet[i].size.y / 2,
					bulletImage[0], true);
		}
	}
}

